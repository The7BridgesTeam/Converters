IN_VERSIONS=0

version_file=$1
pyproject_file=pyproject.toml
backup_pp_file=$pyproject_file.bkup


if [[ -z $version_file ]]
then
    echo "Usage: $0 <requirements file>" >&2
    exit 1
fi

if [[ ! -e $pyproject_file ]]
then
    echo "No $pyproject_file!" >&2
    exit 1
fi

mv "$pyproject_file" "$backup_pp_file"

fail () {
    echo "Failed, reinstating $pyproject_file" >&2
    mv "$backup_pp_file" "$pyproject_file"
}
trap fail EXIT

cat "$backup_pp_file" |
while IFS=$'\n' read line
do
    if [[ $line == "# TEST VERSIONS INSERTION POINT" ]]
    then
        # Preserve the test versions insertion point so that the file can be run
        echo "$line"
        cat "$version_file"
        IN_VERSIONS=1
    else
        if (( IN_VERSIONS ))
        then
            if [[ $line == "# TEST VERSIONS INSERTION POINT END" ]]
            then
                IN_VERSIONS=0
                echo "$line"
            fi
            continue
        fi
        echo "$line"
    fi
done >./"$pyproject_file"

trap - EXIT
rm "$backup_pp_file"
